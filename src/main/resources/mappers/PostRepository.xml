<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderby.myapp.post.dao.IPostRepository">
	<resultMap id="postMap"
		type="com.coderby.myapp.post.model.PostVO">
		<result property="postId" column="POST_ID" />
		<result property="userId" column="USER_ID" />
		<result property="postTitle" column="POST_TITLE" />
		<result property="postContent" column="POST_CONTENT" />
		<result property="postDateTime" column="POST_DATETIME" />
		<result property="postDisease" column="POST_DISEASE" />
		<result property="postSubject" column="POST_SUBJECT" />
		<result property="postLikes" column="POST_LIKES" />
		<result property="postDisLikes" column="POST_DISLIKES" />
		<result property="postViews" column="POST_VIEWS" />
		<result property="postResponded" column="POST_RESPONDED" />
		<result property="postUserName" column="POST_USERNAME" />
	</resultMap>

	<select id="getPostCount" resultType="int">
		SELECT COUNT(*) FROM POSTS
	</select>
	<select id="getPostDiseaseCount" resultType="int">
		SELECT COUNT(*) 
			FROM POSTS
		WHERE 
			POST_DISEASE = #{postDisease}
	</select>

	<select id="getPostList" resultMap="postMap">
		SELECT * FROM POSTS ORDER BY
		POST_ID DESC
	</select>

	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="getPostPage" resultMap="postMap">
		SELECT *
		FROM (
		SELECT ROWNUM
		RN, A.*
		FROM (
		SELECT *
		FROM POSTS
		ORDER BY POST_ID
		DESC
		) A
		)
		WHERE RN
		BETWEEN #{start} AND #{end}
	</select>

	<select id="getPostDiseaseList" resultMap="postMap">
		SELECT * FROM POSTS
		WHERE
		POST_DISEASE = #{postDisease}
		ORDER BY
		POST_ID DESC
	</select>
	<select id="getPostDiseasePage" resultMap="postMap">
		SELECT *
		FROM (
		SELECT ROWNUM
		RN, A.*
		FROM (
		SELECT *
		FROM POSTS
		WHERE POST_DISEASE = #{postDisease}
		ORDER BY POST_ID
		DESC
		) A
		)
		WHERE RN
		BETWEEN #{start} AND #{end}
	</select>

	<select id="getPostSearchList" resultMap="postMap">
		SELECT * FROM POSTS
		WHERE
		<if test="category == 'POST_CONTENT'">
			POST_CONTENT like '%' ||#{text}|| '%'
		</if>
		<if test="category == 'POST_TITLE'">
			POST_TITLE like '%' ||#{text}|| '%'
		</if>
		<if test="category == 'POST_USERNAME'">
			POST_USERNAME like '%' ||#{text}|| '%'
		</if>
		ORDER BY
		POST_ID DESC
	</select>

	<select id="getPostInfo" parameterType="int"
		resultType="com.coderby.myapp.post.model.PostVO">
		SELECT POST_ID as postId,
		USER_ID as userId,
		POST_TITLE as
		postTitle,
		POST_CONTENT as postContent,
		POST_DATETIME as postDateTime,
		POST_DISEASE as postDisease,
		POST_SUBJECT as postSubject,
		POST_LIKES as
		postLikes,
		POST_DISLIKES as postDisLikes,
		POST_VIEWS as postViews,
		POST_RESPONDED as postResponded,
		POST_USERNAME as postUserName
		FROM
		POSTS
		WHERE POST_ID = #{postId}
	</select>

	<update id="updatePost"
		parameterType="com.coderby.myapp.post.model.PostVO">
		UPDATE POSTS
		set
		post_title=#{postTitle},
		post_content=#{postContent},
		post_disease=#{postDisease},
		post_subject=#{postSubject}
		where
		post_id=#{postId}
	</update>

	<update id="respondedPost"
		parameterType="com.coderby.myapp.post.model.PostVO">
		UPDATE POSTS
		set
		POST_RESPONDED = 1
		where
		post_id=#{postId}
	</update>

	<insert id="insertPost"
		parameterType="com.coderby.myapp.post.model.PostVO">
		INSERT INTO POSTS (
		post_id, post_title, post_content,
		post_disease, post_subject, user_id,post_USERNAME)
		VALUES (
		POSTS_SEQ.nextval,
		#{postTitle},
		#{postContent},
		#{postDisease},
		#{postSubject},
		#{userId},
		#{postUserName})
	</insert>

	<delete id="deletePost" parameterType="int">
		delete from posts
		where
		POST_ID = #{postId}
	</delete>

	<update id="upPostView">
		UPDATE POSTS
		SET
		POST_VIEWS=${views}
		where
		post_id=#{postId}
	</update>

	<update id="changelikePost">
		UPDATE POSTS
		SET
		POST_LIKES=#{like_count}
		where
		post_id=#{postId}
	</update>

	<insert id="insertlikePost"
		parameterType="com.coderby.myapp.post.model.LikeVO">
		INSERT INTO LIKES
		(USER_ID, POST_ID)
		VALUES(
		#{userId},
		#{postId})
	</insert>

	<delete id="deletelikePost">
		delete from LIKES
		where
		POST_ID = #{postId}
		AND
		USER_ID =
		${userId}
	</delete>

	<select id="checklikePost" resultType="int">
		SELECT COUNT(*)
		FROM LIKES
		WHERE
		POST_ID = #{postId}
		AND
		USER_ID = #{userId}
	</select>

	<update id="changedislikePost">
		UPDATE POSTS
		SET
		POST_DISLIKES=#{dislike_count}
		where
		post_id=#{postId}
	</update>

	<insert id="insertdislikePost"
		parameterType="com.coderby.myapp.post.model.DisLikeVO">
		INSERT INTO DISLIKES
		(USER_ID, POST_ID)
		VALUES(
		#{userId},
		#{postId})
	</insert>

	<delete id="deletedislikePost">
		delete from DISLIKES
		where
		POST_ID = #{postId}
		AND
		USER_ID = ${userId}
	</delete>

	<select id="checkdislikePost" resultType="int">
		SELECT COUNT(*)
		FROM
		DISLIKES
		WHERE
		POST_ID = #{postId}
		AND
		USER_ID = #{userId}
	</select>

</mapper>